{{- if .Values.beat.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}-beat
  labels:
{{ include "..labels" . | indent 4 }}
spec:
  replicas: {{ .Values.beat.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "..name" . }}-beat
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "..name" . }}-beat
        app.kubernetes.io/instance: {{ .Release.Name }} 
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- if .Values.metrics.datadog.enabled }}
        ad.datadoghq.com/{{ include "..fullname" . }}-beat.logs: '[{"service": "{{ include "..fullname" . }}"}]'
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python"]
          args: ["/app/apps/ppserver/ppserver.py", "--config", "/app/apps/ppserver/config.yaml", "--run", "beat"]
          env:
          {{- $glob := . -}}
          {{- range $name, $value := .Values.env }}
            {{- if not (empty $value) }}
          - name: {{ $name }}
            valueFrom:
              configMapKeyRef:
                key: {{ $name }}
                name: {{ include "..fullname" $glob }}
            {{- end }}
          {{- end }}
          {{- range $name, $value := .Values.secretEnv }}
            {{- if not (empty $value) }}
          - name: {{ $name }}
            valueFrom:
              secretKeyRef:
                key: {{ $name }}
                name: {{ include "..fullname" $glob }}
            {{- end }}
          {{- end }}
          volumeMounts:
          - name: config-volume
            mountPath: /app/apps/ppserver/config.yaml
            subPath: config.yaml
          {{- if .Values.secretFiles.enabled -}}
          {{- $glob := . -}}
          {{- range .Values.secretFiles.secrets }}
            {{- if not (empty .content) }}
          - name: secret-volume
            mountPath: {{ .path | quote }}
            subPath: {{ .name | quote }}
            {{- end }}
          {{- end }}
          {{- end }} # end of if before loop
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health/live
          #     port: http
          #   initialDelaySeconds: 3
          #   periodSeconds: 60
          # readinessProbe:
          #   httpGet:
          #     path: /health/ready
          #     port: http
          #   initialDelaySeconds: 3
          #   periodSeconds: 60
        {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "..fullname" . }}
      - name: secret-volume
        secret:
          secretName: {{ include "..fullname" . }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}